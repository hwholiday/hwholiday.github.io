<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>k8s on hwholiday</title>
    <link>http://hwholiday.github.io/tags/k8s/</link>
    <description>Recent content in k8s on hwholiday</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 03 Feb 2021 00:00:00 +0000</lastBuildDate><atom:link href="http://hwholiday.github.io/tags/k8s/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>安装 Rancher 控制面板到 K8s 集群</title>
      <link>http://hwholiday.github.io/2021/install_rancher_rke2/</link>
      <pubDate>Wed, 03 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>http://hwholiday.github.io/2021/install_rancher_rke2/</guid>
      <description>Helm 一键安装脚本
curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash cert-manager 证书 kubectl apply --validate=false -f https://github.com/jetstack/cert-manager/releases/download/v1.0.4/cert-manager.crds.yaml kubectl create namespace cert-manager helm repo add jetstack https://charts.jetstack.io helm repo update helm install cert-manager jetstack/cert-manager --namespace cert-manager --version v1.0.4 kubectl get pods --namespace cert-manager NAME READY STATUS RESTARTS AGE cert-manager-756bb56c5-gl7j9 1/1 Running 0 87s cert-manager-cainjector-86bc6dc648-sv897 1/1 Running 0 87s cert-manager-webhook-66b555bb5-2q996 1/1 Running 0 87s 安装 Rancher kubectl create namespace rancher-system helm repo add rancher-stable https://releases.rancher.com/server-charts/stable helm install rancher rancher-stable/rancher --namespace rancher-system --set hostname=rancher.</description>
    </item>
    
    <item>
      <title>安装 k8s 集群 Rancher RKE</title>
      <link>http://hwholiday.github.io/2021/install_rancher_rke1/</link>
      <pubDate>Tue, 02 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>http://hwholiday.github.io/2021/install_rancher_rke1/</guid>
      <description>内核 K8S 1.18开始使用了IPVS 所以4.x以下的内核无法再运行K8S 网络会有BUG 官方推荐4.19LTS及以上的内核
查看内核版本 uname -smr 建议升级到最新的长期支持版本
升级内核 安装 Docker yum install -y yum-utils yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo yum install docker-ce-19.03.9 docker-ce-cli-19.03.9 containerd.io 启动 Docker systemctl enable docker systemctl start docker 安装 Rancher RKE 禁用 SELinux /usr/sbin/sestatus -v |grep &amp;#34;SELinux status&amp;#34; #结果为 enabled 为启用状态 vim /etc/selinux/config 将SELINUX=enforcing改为SELINUX=disabled 禁用 swap free -h #total used free shared buff/cache available #Mem: 7.8G 205M 6.9G 8.7M 715M 7.3G #Swap: 5.0G 0B 5.0G #Swap 有值代表启用了swap vim /etc/fstab 使用 # 注释掉有 swap 的一行 关闭防火墙 firewall-cmd --state systemctl stop firewalld.</description>
    </item>
    
    <item>
      <title>通过 istio 部署ws,grpc服务并链接外部redis集群</title>
      <link>http://hwholiday.github.io/2021/istio/</link>
      <pubDate>Tue, 19 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>http://hwholiday.github.io/2021/istio/</guid>
      <description>安装 docker https://docs.docker.com/engine/install/ 安装单节点 k8s 环境 sudo docker run --privileged -d --restart=unless-stopped -p 88:80 -p 433:443 rancher/rancher 访问 https://宿主机IP:433 新建集群单结点要把 etcd ， control plane ，worker 都给勾选上 复制命令启动，等待就好了 软件架构 准备镜像 网关：ws 服务 在目录 gateway 下 服务 V1:grpc 服务 在目录 logic_v1 下 服务 V2:grpc 服务 在目录 logic_v2 下 服务 V3:grpc 服务 在目录 logic_v3 下 链接了 Reids 集群 关于k8s和istio的配置文件 在目录 kube 下
├── gateway.yaml 部署 gateway(Deployment[k8s]) 服务和对应的 Service(k8s) ├── logic.yaml 部署 logic(Deployment[k8s]) 服务和对应的 Service(k8s) ├── net-gateway.</description>
    </item>
    
    <item>
      <title>一键安装 K8s 以及在K8s上部署Go服务</title>
      <link>http://hwholiday.github.io/2020/k8s_v1/</link>
      <pubDate>Fri, 13 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>http://hwholiday.github.io/2020/k8s_v1/</guid>
      <description>通过Rancher一键部署k8s服务 地址: https://rancher.com/quick-start/ 命令 sudo docker run --privileged -d --restart=unless-stopped -p 80:80 -p 443:443 rancher/rancher 然后访问你的docker机器的IP地址就可以看到一个叫local的k8s环境，不过不知道是不是我操作不对,我不能使用这个集群 点击添加集群,自定义一通默认到最后给你一个docker命令执行后我们就又得到一个自定义的k8s集群了（弄一个单节点集群的话最后一步把3个都要勾选上） 下载kubectl https://kubernetes.io/docs/tasks/tools/install-kubectl/ 创建一个～/.kube/config文件，把https://k8s集群部署IP/c/local/monitoring 里面的Kubeconfig File按钮里面的文本拷贝进去OK 部署一个 nginx nginx.yaml
apiVersion: apps/v1 kind: Deployment metadata: name: nginx-deployment labels: app: nginx spec: selector: matchLabels: app: nginx replicas: 1 template: metadata: labels: app: nginx spec: containers: - name: nginx image: nginx ports: - containerPort: 80 运行 &amp;gt;kubectl apply -f nginx.yml deployment.apps/nginx configured &amp;gt;kubectl get pods NAME READY STATUS RESTARTS AGE nginx-deployment-7f4768c97b-69t65 1/1 Running 0 105s //删除 deployment kubectl delete deployment nginx-deployment //删除 pod kubectl.</description>
    </item>
    
  </channel>
</rss>
