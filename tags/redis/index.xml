<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>redis on hwholiday</title><link>http://hwholiday.github.io/tags/redis/</link><description>Recent content in redis on hwholiday</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 17 Mar 2020 00:00:00 +0000</lastBuildDate><atom:link href="http://hwholiday.github.io/tags/redis/index.xml" rel="self" type="application/rss+xml"/><item><title>golang 通过 Redis GEO 实现 LBS 功能</title><link>http://hwholiday.github.io/2020/redis_geo/</link><pubDate>Tue, 17 Mar 2020 00:00:00 +0000</pubDate><guid>http://hwholiday.github.io/2020/redis_geo/</guid><description>LBS 基于位置的服务（Location Based Services，LBS），是利用各类型的定位技术来获取定位设备当前的所在位置，通过移动互联网向定位设备提供信息资源和基础服务。LBS首先读者可利用定位技术确定自身的空间位置，随后读者便可通过移动互联网来获取与位置相关资源和信息。LBS服务中融合了移动通讯、互联网络、空间定位、位置信息、大数据等多种信息技术，利用移动互联网络服务平台进行数据更新和交互，使用户可以通过空间定位来获取相应的服务。 redis 中关于 GEO 的方法 geoadd：增加某个位置的坐标。 geopos：获取某个位置的坐标。 geohash：获取某个位置的geohash值。 geodist：获取两个位置的距离。 georadius：根据给定位置坐标获取指定范围内的位置集合。 georadiusbymember：根据给定位置获取指定范围内的位置集合。 geoadd 使用方法 res, err := GlobalClient.GeoAdd(&amp;#34;geo_hash_test&amp;#34;, &amp;amp;redis.GeoLocation{ Name: &amp;#34;天府广场&amp;#34;, Longitude: 104.072833, Latitude: 30.663422, }, &amp;amp;redis.GeoLocation{ Name: &amp;#34;四川大剧院&amp;#34;, Longitude: 104.074378, Latitude: 30.664804, }, &amp;amp;redis.GeoLocation{ Name: &amp;#34;新华文轩&amp;#34;, Longitude: 104.070084, Latitude: 30.664649, }, &amp;amp;redis.GeoLocation{ Name: &amp;#34;手工茶&amp;#34;, Longitude: 104.072402, Latitude: 30.664121, }, &amp;amp;redis.GeoLocation{ Name: &amp;#34;宽窄巷子&amp;#34;, Longitude: 104.059826, Latitude: 30.669883, }, &amp;amp;redis.GeoLocation{ Name: &amp;#34;奶茶&amp;#34;, Longitude: 104.06085, Latitude: 30.670054, }, &amp;amp;redis.GeoLocation{ Name: &amp;#34;钓鱼台&amp;#34;, Longitude: 104.</description></item><item><title>第一次使用docker并安装mysql,redis（使用xshell操作）</title><link>http://hwholiday.github.io/2017/ubuntu_docker_mysql_redis/</link><pubDate>Fri, 10 Nov 2017 00:00:00 +0000</pubDate><guid>http://hwholiday.github.io/2017/ubuntu_docker_mysql_redis/</guid><description>1:下载openssh-server 使用远程服务
sudo apt-get install openssh-server 2:如果出现ifconfig命令没有反应的情况使用
sudo apt-get install net-tools 3:使用xsell登录到服务器
新建连接：输入(luinx)IP 端口为：22 输入用户名，密码 登录成功
4:安装docker准备(Docker 要求 Ubuntu 系统的内核版本高于 3.10 )
uname -r 查看ubuntu 系统的内核版本 5:安装docker
sudo apt install docker.io （PS:过程比较漫长~~~） sudo su service docker start docker version 6:安装mysql
1:查找mysql镜像
docker search mysql
2:下载镜像
docker pull mysql:5.6 （PS:过程比较漫长~~~）
3:启动mysql
docker run --name mymysql -p 3306:3306 -v /home/howie/mysql/data:/var/lib/mysql -e MYSQL_ROOT_PASSWORD=123456 -d mysql:5.6 //注意，这里的容器名字叫：mymysql ，mysql的root用户密码是：123456 ，映射宿主机子的端口3306到容器的端口3306，本地持久化文件地址/home/howie/mysql/data,仓库名mysql和标签(tag）唯一确定了要指定的镜像，其实如果这里只有一个mysql也有必要要tag，执行该命令返回的结果 4:设置mysql让其可以外部链接
执行 mysql -uroot -p</description></item></channel></rss>